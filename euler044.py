# -*- coding: utf-8 -*-
'''
Pentagon numbers
Problem 44
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
'''
import funcoes

achou = False
i = 1
pentagonos = []

while achou ==  False:
	i += 1
	n = funcoes.pentagono(i)
	j = i - 1
	while j > 0:
		m = funcoes.pentagono(j)
		soma = m + n
		sub = n - m
		if(funcoes.is_pentagono(soma) and funcoes.is_pentagono(sub)):
			print("Indices =",i,j)
			print("Resposta =",n - m)
			achou = True

		j -= 1

'''
Um número é triangular quando ele é da forma n (n+1) / 2.

Ou seja, você tem de resolver uma equação de segundo grau, e depois checar se o resultado é inteiro.

Por exemplo: digamos que você quer saber se 1234567 é um número triangular.

n (n + 1) / 2 = 1234567

Resolva a equação de segundo grau acima.

O resultado deve ser:
n = 1570.8479086440404
e
n = -1571.8479086440404

Como n não é inteiro, então 1234567 não é um número triangular.
'''

# resolvido